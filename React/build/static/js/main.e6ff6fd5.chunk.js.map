{"version":3,"sources":["components/MobileHamburgerPopout/MobileHamburgerButton.js","components/Navbar/Navbar.js","components/MobileHamburgerPopout/MobileHamburgerPopout.js","components/Backdrop/Backdrop.js","pages/Home.jsx","favoriteUsers.js","pages/RandomTweet.jsx","components/Modal/Modal.js","pages/TweetFinder.jsx","pages/404.jsx","App.js","serviceWorker.js","index.js","components/Navbar/ts-png-8.png"],"names":["mobileHamburgerButton","props","react_default","a","createElement","className","onClick","click","navbar","MobileHamburgerPopout_MobileHamburgerButton","hamburgerButton","src","Logo","alt","react_router_dom","to","mobileHamburgerPopout","hamburgerClasses","show","backdrop","HomePage","style","marginTop","width","height","lib","col","favorites","user","id","name","screen_name","profile_image_url_https","RandomTweet","require","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickHandler","event","setState","showResults","axios","get","concat","target","value","then","response","console","log","randomTweet","data","catch","error","resultsCloseHandler","state","screenName","onClose","created_at","text","favorite_count","retweet_count","Component","modal","title","tweets","length","canClose","TweetFinder","startSearchingHandler","searching","keyword","modalCloseHandler","Fragment","Backdrop_Backdrop","Modal_Modal","type","placeholder","onChange","updateKeyword","bind","NotFound","App","hamburgerButtonClickHandler","prevState","hamburgerOpen","backdropClickHandler","Navbar_Navbar","MobileHamburgerPopout_MobileHamburgerPopout","react_router","exact","path","component","React","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e6ff6fd5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './MobileHamburgerButton.css';\r\n\r\nconst mobileHamburgerButton = props => (\r\n    <button className=\"toggle-button\" onClick={props.click}>\r\n        <div className=\"toggle_button_line\"/>\r\n        <div className=\"toggle_button_line\"/>\r\n        <div className=\"toggle_button_line\"/>\r\n    </button>\r\n);\r\n\r\nexport default mobileHamburgerButton;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MobileHamburgerButton from '../MobileHamburgerPopout/MobileHamburgerButton';\r\nimport './Navbar.css';\r\nimport Logo from './ts-png-8.png';\r\n\r\n\r\nconst navbar = props => (\r\n    <header className=\"navbar\">\r\n        <nav className=\"navbar_navigation\">\r\n            <div className=\"popout_toggle\"> \r\n                <MobileHamburgerButton click={props.hamburgerButton} />\r\n            </div>\r\n            <div className=\"navbar_logo\"><img src={Logo} alt='website logo' /></div>\r\n            <div className=\"logo_nav_item_space\" />\r\n            <div className='navbar_items'>\r\n                <ul>\r\n                    <li><Link to={\"/\"}>Home</Link></li>\r\n                    <li><Link to={\"/TweetFinder\"}>Tweet Finder</Link></li>\r\n                    <li><Link to={\"/RandomTweet\"}>Random Tweet</Link></li>             \r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default navbar;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport './MobileHamburgerPopout.css';\r\n\r\nconst mobileHamburgerPopout = props => {\r\n    let hamburgerClasses = 'popout';\r\n    if (props.show) {\r\n        hamburgerClasses = 'popout open';\r\n    }\r\n    return (\r\n    <nav className={hamburgerClasses}>\r\n        <ul>\r\n            <li><Link to={\"/\"}>Home</Link></li>\r\n            <li><Link to={\"/TweetFinder\"}>Tweet Finder</Link></li>\r\n            <li><Link to={\"/RandomTweet\"}>Random Tweet</Link></li>             \r\n        </ul>\r\n    </nav>\r\n    );\r\n};\r\n\r\nexport default mobileHamburgerPopout;","import React from 'react';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst backdrop = props => (\r\n    <div className=\"backdrop\" onClick={props.click} />\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport { Grid, Cell } from 'react-mdl';\r\nimport './Home.css';\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div style={{ marginTop: '75px', width: '100%', height: '100%' }}>\r\n            <Grid className='landing-grid'>\r\n                <Cell col={12}>\r\n                    <img\r\n                        src='./images/twitter-logo-new.png'\r\n                        alt='home'\r\n                        className='home-img'\r\n                    />\r\n                    <div className='banner-text'>\r\n                        <h1>Welcome To The Twitter Showcase!</h1>\r\n\r\n                        <hr />\r\n                        <p>\r\n                            Find Tweets from Twitter using keywords and/or\r\n                            Twitter handles\r\n                        </p>\r\n                    </div>\r\n                </Cell>\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HomePage;\r\n","const favorites = [\r\n    {\r\n        user: {\r\n            id: 704423671075475457,\r\n            name: \"KingGeorge\",\r\n            screen_name: \"KingGeorge\",\r\n            profile_image_url_https:\r\n                \"https://pbs.twimg.com/profile_images/1055780599699566593/6UwVvpXZ_bigger.jpg\"\r\n        }\r\n    },\r\n    {\r\n        user: {\r\n            id: 18927441,\r\n            name: \"IGN\",\r\n            screen_name: \"IGN\",\r\n            profile_image_url_https:\r\n                \"https://pbs.twimg.com/profile_images/1005243587649392640/Lfv26J1v_bigger.jpg\"\r\n        }\r\n    },\r\n    {\r\n        user: {\r\n            id: 361084191,\r\n            name: \"SMii7Y\",\r\n            screen_name: \"SMii7Y\",\r\n            profile_image_url_https:\r\n                \"https://pbs.twimg.com/profile_images/1100096838303186945/1nXfKlQ-_bigger.png\"\r\n        }\r\n    },\r\n    {\r\n        user: {\r\n            id: 44196397,\r\n            name: \"Elon Musk\",\r\n            screen_name: \"elonmusk\",\r\n            profile_image_url_https:\r\n                \"https://pbs.twimg.com/profile_images/1163869972633808897/EPuBFf_K_bigger.jpg\"\r\n        }\r\n    },\r\n    {\r\n        user: {\r\n            id: 399404516,\r\n            name: \"Rainbow Six Siege\",\r\n            screen_name: \"Rainbow6Game\",\r\n            profile_image_url_https:\r\n                \"https://pbs.twimg.com/profile_images/1163478436586958848/E_qO2JFD_bigger.jpg\"\r\n        }\r\n    }\r\n];\r\n\r\nexport default favorites;","import React, { Component } from \"react\";\nimport { Grid, Cell } from 'react-mdl';\nimport axios from \"axios\";\nimport './RandomTweet.css';\nimport favorites from \"../favoriteUsers.js\";\n\nconst moment = require(\"moment\");\n\n\nclass RandomTweet extends Component {\n    constructor() {\n        super();\n        this.state = {\n            screenName: '',\n            user: favorites,\n            randomTweet: null,\n            showResults: false\n        };\n    }\n\n    /*updateScreenName(event) {\n        this.setState({ screenName: event.target.value });\n        console.log(event.target.value);\n    }*/\n\n    onClickHandler = (event) => {\n        this.setState({\n            showResults: true\n        });\n\n        axios.get(`http://localhost:5000/api/random?screen_name=${event.target.value}`)\n            .then(response => {\n                console.log({ randomTweet: response.data });\n                this.setState({ randomTweet: response.data });\n            })\n            .catch(error => {\n                console.log(\"Error Message: \" + error);\n            });\n\n    };\n\n    resultsCloseHandler = () => {\n        this.setState({\n            showResults: false\n        });\n    };\n\n\n    render() {\n        const favorites = this.state.user;\n\n        return (\n            <div style={{ marginTop: '75px', width: '100%', height: '100%' }}>\n                <section>\n                    <div className=\"container\">\n                        <h1 className=\"heading\">Random Tweets</h1>\n                        <div className=\"card-wrapper\">\n                            <div className=\"card\">\n                                <img src=\"./images/kinggeorge.jpg\" alt=\"banner\" className=\"card-img\"></img>\n                                <img src={favorites[0].user.profile_image_url_https} alt=\"profile image\" className=\"profile-img\"></img>\n                                <h1>{favorites[0].user.name}</h1>\n                                <p className=\"screen-name\">@{favorites[0].user.screen_name}</p>\n                                <button\n                                    className=\"btn-rnd\"\n                                    value=\"kinggeorge\"\n                                    onClick={this.onClickHandler}\n                                    onClose={this.resultsCloseHandler}\n                                >\n                                    Reveal Tweet\n                                </button>\n                                {this.state.showResults && this.state.randomTweet !== null && this.state.randomTweet.user.screen_name === \"KingGeorge\" && (\n                                    <div className=\"show-results\" onClose={this.resultsCloseHandler}>\n                                        {<button className=\"btn-modal-1\" onClick={this.resultsCloseHandler}>Hide Tweet</button>}\n                                        <p className=\"time\">{this.state.randomTweet.created_at}</p>\n                                        <p className=\"about\">{this.state.randomTweet.text}</p>\n                                        <div className=\"icons\">\n                                            <i className=\"fas fa-heart\">&nbsp;{this.state.randomTweet.favorite_count}</i>\n                                            <i className=\"fas fa-retweet\">&nbsp;{this.state.randomTweet.retweet_count}</i>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"card\">\n                                <img src=\"./images/ign.jpg\" alt=\"banner\" className=\"card-img\"></img>\n                                <img src={favorites[1].user.profile_image_url_https} alt=\"profile image\" className=\"profile-img\"></img>\n                                <h1>{favorites[1].user.name}</h1>\n                                <p className=\"screen-name\">@{favorites[1].user.screen_name}</p>\n                                <button\n                                    className=\"btn-rnd\"\n                                    value=\"ign\"\n                                    onClick={this.onClickHandler}\n                                    onClose={this.resultsCloseHandler}\n                                >\n                                    Reveal Tweet\n                                </button>\n                                {this.state.showResults && this.state.randomTweet !== null && this.state.randomTweet.user.screen_name === \"IGN\" && (\n                                    <div className=\"show-results\" onClose={this.resultsCloseHandler}>\n                                        {<button className=\"btn-modal-1\" onClick={this.resultsCloseHandler}>Hide Tweet</button>}\n                                        <p className=\"time\">{this.state.randomTweet.created_at}</p>\n                                        <p className=\"about\">{this.state.randomTweet.text}</p>\n                                        <div className=\"icons\">\n                                            <i className=\"fas fa-heart\">{this.state.randomTweet.favorite_count}</i>\n                                            <i className=\"fas fa-retweet\">{this.state.randomTweet.retweet_count}</i>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"card\">\n                                <img src=\"./images/SMii7y.jpg\" alt=\"banner\" className=\"card-img\"></img>\n                                <img src={favorites[2].user.profile_image_url_https} alt=\"profile image\" className=\"profile-img\"></img>\n                                <h1>{favorites[2].user.name}</h1>\n                                <p className=\"screen-name\">@{favorites[2].user.screen_name}</p>\n                                <button\n                                    className=\"btn-rnd\"\n                                    value=\"SMii7y\"\n                                    onClick={this.onClickHandler}\n                                    onClose={this.resultsCloseHandler}\n                                >\n                                    Reveal Tweet\n                                </button>\n                                {this.state.showResults && this.state.randomTweet !== null && this.state.randomTweet.user.screen_name === \"SMii7Y\" && (\n                                    <div className=\"show-results\" onClose={this.resultsCloseHandler}>\n                                        {<button className=\"btn-modal-1\" onClick={this.resultsCloseHandler}>Hide Tweet</button>}\n                                        <p className=\"time\">{this.state.randomTweet.created_at}</p>\n                                        <p className=\"about\">{this.state.randomTweet.text}</p>\n                                        <div className=\"icons\">\n                                            <i className=\"fas fa-heart\">{this.state.randomTweet.favorite_count}</i>\n                                            <i className=\"fas fa-retweet\">{this.state.randomTweet.retweet_count}</i>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"card\">\n                                <img src=\"./images/elonmusk.jpg\" alt=\"banner\" className=\"card-img\"></img>\n                                <img src={favorites[3].user.profile_image_url_https} alt=\"profile image\" className=\"profile-img\"></img>\n                                <h1>{favorites[3].user.name}</h1>\n                                <p className=\"screen-name\">@{favorites[3].user.screen_name}</p>\n                                <button\n                                    className=\"btn-rnd\"\n                                    value=\"elonmusk\"\n                                    onClick={this.onClickHandler}\n                                    onClose={this.resultsCloseHandler}\n                                >\n                                    Reveal Tweet\n                                </button>\n                                {this.state.showResults && this.state.randomTweet !== null && this.state.randomTweet.user.screen_name === \"elonmusk\" && (\n                                    <div className=\"show-results\" onClose={this.resultsCloseHandler}>\n                                        {<button className=\"btn-modal-1\" onClick={this.resultsCloseHandler}>Hide Tweet</button>}\n                                        <p className=\"time\">{this.state.randomTweet.created_at}</p>\n                                        <p className=\"about\">{this.state.randomTweet.text}</p>\n                                        <div className=\"icons\">\n                                            <i className=\"fas fa-heart\">{this.state.randomTweet.favorite_count}</i>\n                                            <i className=\"fas fa-retweet\">{this.state.randomTweet.retweet_count}</i>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n\n                            <div className=\"card\">\n                                <img src=\"./images/rainbow6.jpg\" alt=\"banner\" className=\"card-img\"></img>\n                                <img src={favorites[4].user.profile_image_url_https} alt=\"profile image\" className=\"profile-img\"></img>\n                                <h1>{favorites[4].user.name}</h1>\n                                <p className=\"screen-name\">@{favorites[4].user.screen_name}</p>\n                                <button\n                                    className=\"btn-rnd\"\n                                    value=\"rainbow6game\"\n                                    onClick={this.onClickHandler}\n                                    onClose={this.resultsCloseHandler}\n                                >\n                                    Reveal Tweet\n                                </button>\n                                {this.state.showResults && this.state.randomTweet !== null && this.state.randomTweet.user.screen_name === \"Rainbow6Game\" && (\n                                    <div className=\"show-results\" onClose={this.resultsCloseHandler}>\n                                        {<button className=\"btn-modal-1\" onClick={this.resultsCloseHandler}>Hide Tweet</button>}\n                                        <p className=\"time\">{this.state.randomTweet.created_at}</p>\n                                        <p className=\"about\">{this.state.randomTweet.text}</p>\n                                        <div className=\"icons\">\n                                            <i className=\"fas fa-heart\">{this.state.randomTweet.favorite_count}</i>\n                                            <i className=\"fas fa-retweet\">{this.state.randomTweet.retweet_count}</i>\n                                        </div>\n                                    </div>\n                                )}\n                            </div>\n                        </div>\n                    </div>\n                </section>\n\n            </div>\n\n        );\n    }\n}\n\nexport default RandomTweet;","import React from 'react';\n\nimport './Modal.css';\n\n\nconst modal = props => (\n    <div className=\"modal\">\n        <header className='modal_header'>\n            <h1>{props.title}</h1>\n        </header>\n        <div id=\"tweet_container\">\n\n            <div className=\"Tweet_1\">\n                <div className=\"name_top\">{props.tweets.length > 0 ? props.tweets[0].user.name : ''}</div>\n                <div className=\"screen_name_top\">{props.tweets.length > 0 ? '@' + props.tweets[0].user.screen_name : ''}</div>\n                <div className=\"divider_top\"></div>\n                <div className=\"text_top\">{props.tweets.length > 0 ? props.tweets[0].text : ''}</div>\n                <div className=\"Tweet_img_1\"><img src={props.tweets.length > 0 ? props.tweets[0].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n            <div className=\"Tweet_2\">\n                <div className=\"name_top\">{props.tweets.length > 1 ? props.tweets[1].user.name : ''}</div>\n                <div className=\"screen_name_top\">{props.tweets.length > 1 ? '@' + props.tweets[1].user.screen_name : ''}</div>\n                <div className=\"divider_top\"></div>\n                <div className=\"text_top\">{props.tweets.length > 1 ? props.tweets[1].text : ''}</div>\n                <div className=\"Tweet_img_2\"><img src={props.tweets.length > 1 ? props.tweets[1].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n            <div className=\"Tweet_3\">\n                <div className=\"name_top\">{props.tweets.length > 2 ? props.tweets[2].user.name : ''}</div>\n                <div className=\"screen_name_top\">{props.tweets.length > 2 ? '@' + props.tweets[2].user.screen_name : ''}</div>\n                <div className=\"divider_top\"></div>\n                <div className=\"text_top\">{props.tweets.length > 2 ? props.tweets[2].text : ''}</div>\n                <div className=\"Tweet_img_3\"><img src={props.tweets.length > 2 ? props.tweets[2].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n            <div className=\"Tweet_4\">\n                <div className=\"name_bottom\">{props.tweets.length > 3 ? props.tweets[3].user.name : ''}</div>\n                <div className=\"screen_name_bottom\">{props.tweets.length > 3 ? '@' + props.tweets[3].user.screen_name : ''}</div>\n                <div className=\"divider_bottom\"></div>\n                <div className=\"text_bottom\">{props.tweets.length > 3 ? props.tweets[3].text : ''}</div>\n                <div className=\"Tweet_img_4\"><img src={props.tweets.length > 3 ? props.tweets[3].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n            <div className=\"Tweet_5\">\n                <div className=\"name_bottom\">{props.tweets.length > 4 ? props.tweets[4].user.name : ''}</div>\n                <div className=\"screen_name_bottom\">{props.tweets.length > 4 ? '@' + props.tweets[4].user.screen_name : ''}</div>\n                <div className=\"divider_bottom\"></div>\n                <div className=\"text_bottom\">{props.tweets.length > 4 ? props.tweets[4].text : ''}</div>\n                <div className=\"Tweet_img_5\"><img src={props.tweets.length > 4 ? props.tweets[4].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n            <div className=\"Tweet_6\">\n                <div className=\"name_bottom\">{props.tweets.length > 5 ? props.tweets[5].user.name : ''}</div>\n                <div className=\"screen_name_bottom\">{props.tweets.length > 5 ? '@' + props.tweets[5].user.screen_name : ''}</div>\n                <div className=\"divider_bottom\"></div>\n                <div className=\"text_bottom\">{props.tweets.length > 5 ? props.tweets[5].text : ''}</div>\n                <div className=\"Tweet_img_6\"><img src={props.tweets.length > 5 ? props.tweets[5].user.profile_image_url_https : ''} alt=\"Profile Image\"></img></div>\n            </div>\n\n        </div>\n        <section className=\"modal_actions\">\n            {props.canClose && <button className=\"btn-modal\" onClick={props.onClose}>Close</button>}\n        </section>\n    </div>\n);\n\nexport default modal;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Grid, Cell } from 'react-mdl';\nimport './TweetFinder.css';\n\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport Modal from '../components/Modal/Modal';\n\nclass TweetFinder extends Component {\n    constructor() {\n        super();\n        this.state = {\n            keyword: '',\n            tweets: [],\n            searching: false\n        };\n    }\n\n\n    //Creates the Keyword value to user input\n    updateKeyword(event) {\n        this.setState({ keyword: event.target.value });\n    }\n\n\n    startSearchingHandler = () => {\n        this.setState({ searching: true });\n\n        axios.get(`http://localhost:5000/api/tweets?q=${this.state.keyword}`)\n            .then(response => {\n                //console.log('data: ', response.data);\n                this.setState({ tweets: response.data });\n            })\n            .catch(error => {\n                console.log(\"Error Message: \" + error);\n            });\n    };\n\n\n    modalCloseHandler = () => {\n        this.setState({ searching: false });\n    };\n\n    render() {\n\n        return (\n            <React.Fragment>\n                <div\n                    style={{ marginTop: '75px', width: '100%', height: '100%' }}\n                >\n                    <Grid className='landing-grid'>\n                        <Cell col={12}>\n                            <img\n                                src='./images/twitter-logo-new.png'\n                                alt='home'\n                                className='home-img'\n                            />\n                            {this.state.searching && <Backdrop />}\n                            {this.state.searching && (\n                                <Modal\n                                    title='Here are your Tweets!'\n                                    canClose\n                                    tweets={this.state.tweets}\n                                    onClose={this.modalCloseHandler}\n                                >\n                                    <p>Modal Content</p>\n                                </Modal>\n                            )}\n\n                            <div className='search-box'>\n                                <input\n                                    className='search-txt'\n                                    type='text'\n                                    name='keyword'\n                                    placeholder='Enter Keyword Here'\n                                    onChange={this.updateKeyword.bind(this)}\n                                />\n                                <a\n                                    className='search-btn'\n                                    onClick={this.startSearchingHandler}\n                                >\n                                    <i className='fas fa-search' />\n                                </a>\n                            </div>\n                        </Cell>\n                    </Grid>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default TweetFinder;\n","import React from \"react\";\r\n\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div style={{marginTop: '90px'}}>\r\n            <h2>Error 404: Page not found</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\nimport {\n  BrowserRouter,\n  Route,\n  Switch,\n  Link,\n  Redirect\n} from \"react-router-dom\";\nimport './App.css';\n\nimport Navbar from './components/Navbar/Navbar';\nimport MobileHamburgerPopout from './components/MobileHamburgerPopout/MobileHamburgerPopout';\nimport Backdrop from './components/Backdrop/Backdrop';\n\n//pages\nimport HomePage from \"./pages/Home\";\nimport RandomTweet from \"./pages/RandomTweet\";\nimport TweetFinder from \"./pages/TweetFinder\";\nimport NotFound from \"./pages/404\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      hamburgerOpen: false,\n    };\n  }\n\n  hamburgerButtonClickHandler = () => {\n    this.setState((prevState) => {\n      return {\n        hamburgerOpen: !prevState.hamburgerOpen\n      };\n    });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({\n      hamburgerOpen: false\n    });\n  };\n\n  render() {\n    let backdrop;\n    if (this.state.hamburgerOpen) {\n      backdrop = < Backdrop click={\n        this.backdropClickHandler\n      }\n      />\n    }\n    return (<\n      BrowserRouter >\n      <\n      div style={\n          {\n            height: '100%'\n          }\n        } >\n        <\n          Navbar hamburgerButton={\n            this.hamburgerButtonClickHandler\n          }\n        /> <\n          MobileHamburgerPopout show={\n            this.state.hamburgerOpen\n          }\n        /> {\n          backdrop\n        } <\n          Switch >\n          <\n            Route exact path=\"/\"\n            component={\n              HomePage\n            }\n          /> <\n            Route path=\"/404\"\n            component={\n              NotFound\n            }\n          /> <\n            Route path=\"/TweetFinder\"\n            component={\n              TweetFinder\n            }\n          /> <\n            Route path=\"/RandomTweet\"\n            component={\n              RandomTweet\n            }\n          /> <\n            Redirect to=\"/404\" />\n          <\n      /Switch> <\n      /div> </BrowserRouter >\n        );\n      }\n    }\n    \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n        <App />, document.getElementById('root')\n        \n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/ts-png-8.879a806f.png\";"],"sourceRoot":""}